$date
   Tue Apr 15 10:58:43 2025
$end

$version
  2024.1
  $dumpfile ("tb_wave.vcd") 
$end

$timescale
  1ps
$end

$scope module tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module uut $end
$var wire 1 # clk $end
$var wire 1 $ reset $end
$var wire 32 % PC_top [31:0] $end
$var wire 32 & instruction_top [31:0] $end
$var wire 32 ' Rd1_top [31:0] $end
$var wire 32 ( Rd2_top [31:0] $end
$var wire 32 ) ImmExt_top [31:0] $end
$var wire 32 * mux2_top [31:0] $end
$var wire 32 + Sum_out_top [31:0] $end
$var wire 32 , NexttoPC_top [31:0] $end
$var wire 32 - PCin_top [31:0] $end
$var wire 32 . address_top [31:0] $end
$var wire 32 / Memdata_top [31:0] $end
$var wire 32 0 WriteBack_top [31:0] $end
$var wire 1 1 RegWrite_top $end
$var wire 1 2 ALUSrc_top $end
$var wire 1 3 zero_top $end
$var wire 1 4 branch_top $end
$var wire 1 5 sel1_top $end
$var wire 1 6 MemtoReg_top $end
$var wire 1 7 MemWrite_top $end
$var wire 1 8 MemRead_top $end
$var wire 2 9 ALUOp_top [1:0] $end
$var wire 4 : control_top [3:0] $end
$scope module PC $end
$var wire 1 # clk $end
$var wire 1 $ reset $end
$var wire 32 - PC_in [31:0] $end
$var reg 32 ; PC_out [31:0] $end
$upscope $end
$scope module PC_Adder $end
$var wire 32 % fromPC [31:0] $end
$var wire 32 , NexttoPC [31:0] $end
$upscope $end
$scope module Inst_Memory $end
$var wire 1 # clk $end
$var wire 32 % read_address [31:0] $end
$var reg 32 < instruction_out [31:0] $end
$upscope $end
$scope module Reg_File $end
$var wire 1 # clk $end
$var wire 1 $ reset $end
$var wire 1 1 RegWrite $end
$var wire 5 = Rs1 [19:15] $end
$var wire 5 > Rs2 [24:20] $end
$var wire 5 ? Rd [11:7] $end
$var wire 32 0 Write_data [31:0] $end
$var wire 32 ' read_data1 [31:0] $end
$var wire 32 ( read_data2 [31:0] $end
$var integer 32 @ k [31:0] $end
$upscope $end
$scope module ImmGen $end
$var wire 7 A Opcode [6:0] $end
$var wire 32 & instruction [31:0] $end
$var reg 32 B ImmExt [31:0] $end
$upscope $end
$scope module Control_Unit $end
$var wire 7 A instruction [6:0] $end
$var reg 1 C Branch $end
$var reg 1 D MemRead $end
$var reg 1 E MemtoReg $end
$var reg 1 F MemWrite $end
$var reg 1 G ALUSrc $end
$var reg 1 H RegWrite $end
$var reg 2 I ALUOp [1:0] $end
$upscope $end
$scope module ALU_Control $end
$var wire 7 J fun7 [31:25] $end
$var wire 3 K fun3 [14:12] $end
$var wire 2 9 ALUOp [1:0] $end
$var reg 4 L Control_out [3:0] $end
$upscope $end
$scope module ALU $end
$var wire 32 ' A [31:0] $end
$var wire 32 * B [31:0] $end
$var wire 4 : Control_in [3:0] $end
$var reg 1 M zero $end
$var reg 32 N ALU_Result [31:0] $end
$upscope $end
$scope module ALU_mux $end
$var wire 1 2 sel2 $end
$var wire 32 ( A2 [31:0] $end
$var wire 32 ) B2 [31:0] $end
$var wire 32 * Mux2_out [31:0] $end
$upscope $end
$scope module Adder $end
$var wire 32 % in_1 [31:0] $end
$var wire 32 ) in_2 [31:0] $end
$var wire 32 + Sum_out [31:0] $end
$upscope $end
$scope module AND $end
$var wire 1 4 branch $end
$var wire 1 3 zero $end
$var wire 1 5 and_out $end
$upscope $end
$scope module PC_Mux $end
$var wire 1 5 sel1 $end
$var wire 32 , A1 [31:0] $end
$var wire 32 + B1 [31:0] $end
$var wire 32 - Mux1_out [31:0] $end
$upscope $end
$scope module Data_mem $end
$var wire 1 # clk $end
$var wire 1 $ reset $end
$var wire 1 7 MemWrite $end
$var wire 1 8 MemRead $end
$var wire 32 . read_address [31:0] $end
$var wire 32 ( Write_data [31:0] $end
$var wire 32 / MemData_out [31:0] $end
$var integer 32 O k [31:0] $end
$upscope $end
$scope module Result_Mux $end
$var wire 1 6 sel3 $end
$var wire 32 . A3 [31:0] $end
$var wire 32 / B3 [31:0] $end
$var wire 32 0 Mux3_out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
0!
0"
0#
0$
bx %
bx &
bx '
bx (
bx )
bx *
bx +
bx ,
bx -
bx .
bx /
bx 0
x1
x2
x3
x4
x5
x6
x7
x8
bx 9
bx :
bx ;
bx <
bx =
bx >
bx ?
bx @
bx A
bx B
xC
xD
xE
xF
xG
xH
bx I
bx J
bx K
bx L
xM
bx N
bx O
$end

#5000
1!
1#
b0 &
b0 )
b0 /
01
02
04
05
06
07
08
b0 9
b10 :
b0 <
b0 =
b0 >
b0 ?
b0 A
b0 B
0C
0D
0E
0F
0G
0H
b0 I
b0 J
b0 K
b10 L

#10000
0!
0#

#15000
1!
1#

#20000
0!
0#

#25000
1!
1#

#30000
0!
0#

#35000
1!
1#

#40000
0!
0#

#45000
1!
1#

#50000
0!
0#

#55000
1!
1#

#60000
0!
0#

#65000
1!
1#

#70000
0!
0#

#75000
1!
1#

#80000
0!
0#

#85000
1!
1#

#90000
0!
0#

#95000
1!
1#

#100000
0!
0#

#105000
1!
1#

#110000
0!
0#

#115000
1!
1#

#120000
0!
0#

#125000
1!
1#

#130000
0!
0#

#135000
1!
1#

#140000
0!
0#

#145000
1!
1#

#150000
0!
0#

#155000
1!
1#

#160000
0!
0#

#165000
1!
1#

#170000
0!
0#

#175000
1!
1#

#180000
0!
0#

#185000
1!
1#

#190000
0!
0#

#195000
1!
1#

#200000
0!
0#

#205000
1!
1#

#210000
0!
0#

#215000
1!
1#

#220000
0!
0#

#225000
1!
1#

#230000
0!
0#

#235000
1!
1#

#240000
0!
0#

#245000
1!
1#

#250000
0!
0#

#255000
1!
1#

#260000
0!
0#

#265000
1!
1#

#270000
0!
0#

#275000
1!
1#

#280000
0!
0#

#285000
1!
1#

#290000
0!
0#

#295000
1!
1#

#300000
0!
0#

#305000
1!
1#

#310000
0!
0#

#315000
1!
1#

#320000
0!
0#

#325000
1!
1#

#330000
0!
0#

#335000
1!
1#

#340000
0!
0#

#345000
1!
1#

#350000
0!
0#

#355000
1!
1#

#360000
0!
0#

#365000
1!
1#

#370000
0!
0#

#375000
1!
1#

#380000
0!
0#

#385000
1!
1#

#390000
0!
0#

#395000
1!
1#

#400000
0!
0#

#405000
1!
1#

#410000
0!
0#

#415000
1!
1#

#420000
0!
0#

#425000
1!
1#

#430000
0!
0#

#435000
1!
1#

#440000
0!
0#

#445000
1!
1#

#450000
0!
0#

#455000
1!
1#

#460000
0!
0#

#465000
1!
1#

#470000
0!
0#

#475000
1!
1#

#480000
0!
0#

#485000
1!
1#

#490000
0!
0#

#495000
1!
1#

#500000
0!
0#

#505000
1!
1#

#510000
0!
0#

#515000
1!
1#

#520000
0!
0#

#525000
1!
1#

#530000
0!
0#

#535000
1!
1#

#540000
0!
0#

#545000
1!
1#

#550000
0!
0#

#555000
1!
1#

#560000
0!
0#

#565000
1!
1#

#570000
0!
0#

#575000
1!
1#

#580000
0!
0#

#585000
1!
1#

#590000
0!
0#

#595000
1!
1#

#600000
0!
0#

#605000
1!
1#

#610000
0!
0#

#615000
1!
1#

#620000
0!
0#

#625000
1!
1#

#630000
0!
0#

#635000
1!
1#

#640000
0!
0#

#645000
1!
1#

#650000
0!
0#

#655000
1!
1#

#660000
0!
0#

#665000
1!
1#

#670000
0!
0#

#675000
1!
1#

#680000
0!
0#

#685000
1!
1#

#690000
0!
0#

#695000
1!
1#

#700000
0!
0#

#705000
1!
1#

#710000
0!
0#

#715000
1!
1#

#720000
0!
0#

#725000
1!
1#

#730000
0!
0#

#735000
1!
1#

#740000
0!
0#

#745000
1!
1#

#750000
0!
0#

#755000
1!
1#

#760000
0!
0#

#765000
1!
1#

#770000
0!
0#

#775000
1!
1#

#780000
0!
0#

#785000
1!
1#

#790000
0!
0#

#795000
1!
1#

#800000
0!
0#

#805000
1!
1#

#810000
0!
0#

#815000
1!
1#

#820000
0!
0#

#825000
1!
1#

#830000
0!
0#

#835000
1!
1#

#840000
0!
0#

#845000
1!
1#

#850000
0!
0#

#855000
1!
1#

#860000
0!
0#

#865000
1!
1#

#870000
0!
0#

#875000
1!
1#

#880000
0!
0#

#885000
1!
1#

#890000
0!
0#

#895000
1!
1#

#900000
0!
0#

#905000
1!
1#

#910000
0!
0#

#915000
1!
1#

#920000
0!
0#

#925000
1!
1#

#930000
0!
0#

#935000
1!
1#

#940000
0!
0#

#945000
1!
1#

#950000
0!
0#

#955000
1!
1#

#960000
0!
0#

#965000
1!
1#

#970000
0!
0#

#975000
1!
1#

#980000
0!
0#

#985000
1!
1#

#990000
0!
0#

#995000
1!
1#

#1000000
0!
0#
